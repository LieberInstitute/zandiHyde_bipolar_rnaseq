
sQTL analysis with Leafcutter using genotype data from previous Lieber eQTL experiments

#### Step 1: convert .count files to .junc files ####
# Starting from the junction count files generated by featureCounts, we create .junc files 
# that have a different column order but are otherwise identical

# cd into the directory you want to store your .junc files in before running this command
for i in $(ls /dcl01/lieber/ajaffe/lab/zandiHyde_bipolar_rnaseq/preprocessed_data/Counts/junction/*.count); 
	do python ../scripts/reformat_junc.py $i;
done

# create a file containing the names of all .junc files
ls /users/schadinh/lieber/jxn_counts/*.junc >> all_jxn_filenames.txt

#### Step 2: cluster introns ####
# Generate intron clusters from the .junc files, this results in many different files,
# but the one used in step 3 is a matrix of all junction/individual pairs where
# each cell is a ratio in string format "#/#"

python /users/schadinh/lieber/scripts/leafcutter_cluster.py -j /users/schadinh/lieber/jxn_counts/all_jxn_filenames.txt -m 50 -o BP_RNAseq -l 500000

#### Step 3: Generate a normalized ratio matrix ####
# Generates normalized ration matrix files for each chromosome (qqnorm files) and non normalized files
# Also generates a file containing covariates controlled by the -p flag (eg -p 10 = 10 covariates)
# We will generate our own covariates in line with the MatrixEQTL experiments in future steps

# Create a ratio file with only autosomes - Leafcutter does not seem to be able to handle chromosomes other than the
# autosomes. Attempting the prepare_phenotype_table.py script with mitochondrial loci results in an error
/users/schadinh/lieber/jxn_counts/BP_RNAseq_perind.counts.gz | grep -f /users/schadinh/lieber/jxn_counts/tokeep.txt | > /users/schadinh/lieber/jxn_counts/BP_RNAseq_perind.counts.chrom
# zip autosome ratio file 
gzip /users/schadinh/lieber/jxn_counts/BP_RNAseq_perind.chounts.chrom
# Create qqnormed file for each autosome
python /users/schadinh/lieber/scripts/prepare_phenotype_table.py /users/schadinh/lieber/jxn_counts/BP_RNAseq_perind.counts.chrom.gz -p 10
# Compile each autosome into a single file
head -1 BP_RNAseq_perind.counts.chrom.gz.qqnorm_chr1 > BP_RNAseq_perind.counts.chrom.gz.qqnorm_all
cat BP_RNAseq_perind.counts.chrom.gz.qqnorm_chr* | bedtools sort -i - >> BP_RNAseq_perind.counts.chrom.gz.qqnorm_all
# Create file for Amygdala and sACC regions containing qqnorm'd data with Brain Numbers (BrNum) as column names
Rscript extract_qqnorm_data.R
# Loading data into R changes the '#' in the header line to 'X.', the following sed commands revert the change
sed -i 's/X./#/' /users/schadinh/lieber/qqnorm/amygdala_qqnorm_20190329.txt
sed -i 's/X./#/' /users/schadinh/lieber/qqnorm/sacc_qqnorm_20190329.txt

#### Step 4: Generate genotype VCF and covariates ####
# Use code from the MatrixeQTL analysis to regenerate a genotype vcf and run
# PCA on the qqnorm ratio matrix
# The path to the most recent files I used are hard coded in the scripts

# PCA
Rscript /users/schadinh/lieber/scripts/calculate_covariates_amy.R
Rscript /users/schadinh/lieber/scripts/calculate_covariates_sacc.R

# VCF
Rscript /users/schadinh/lieber/scripts/generate_raggr_vcf_amy.R
Rscript /users/schadinh/lieber/scripts/generate_raggr_vcf_sacc.R
# need to bgzip and tabix all output of these files before using FastQTL

#### Step 5: FastQTL ####
# scripts to run the FastQTL process with most recent input files hard coded

amy_fastqtl_script.sh
sacc_fastqtl_script.sh
